name: Python Checking

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-2016, windows-2019]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Linux Cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txts') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: MacOS Cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txts') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Windows Cache
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txts') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependanices
      run: |
        pip install --upgrade pip wheel
        pip install . -r requirements_dev.txt

    - name: Python Black
      run: black --check haralyzer_3

    - name: Pylint
      run: pylint haralyzer_3

    - name: Flake8
      run: flake8 --statistics --show-source --count haralyzer_3

    - name: Bandit
      run: bandit -r haralyzer_3

    - name: Tests
      run: py.test --cov haralyzer tests/ -vv

    - name: Coveralls Parallel
      run: coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
        COVERALLS_PARALLEL: true

  Report_to_Coveralls:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}